name: checkmodulemd
namespace: modules
desc: download modulemd and run validity checks upon it
maintainer: merlinm

input:
    args:
        - dist_git_commit

environment:
    rpm:
        - python2-aexpect
        - python2-avocado
        - python2-modulemd

actions:
    - name: split the given commit identifier into useful pieces
      python:
        file: split_string.py
        callable: run
        string: ${dist_git_commit}
      export: c

    - name: download the modulemd file
      distgit:
        package: ${c.name}
        gitref: ${c.gitref}
        # This will always be modules/ ...
        namespace: ${c.namespace}
        baseurl: http://pkgs.stg.fedoraproject.org
        path:
          - ${c.name}.yaml
        localpath:
          - download/${c.name}.yaml

    - name: run avocado modulemd validity test
      shell:
      - [avocado, run, check_modulemd.py, --mux-inject, 'run:modulemd:${workdir}/download/${c.name}.yaml']

    #- name: process avocado run output
    #  python:
    #      file: process_results.py
    #      callable: run
    #      workdir: ${workdir}
    #      koji_build: ${koji_build}
    #      artifactsdir: ${artifactsdir}
    #  export: check_modulemd_output

    #- name: report results to resultsdb
    #  resultsdb:
    #      results: ${check_modulemd_output}
